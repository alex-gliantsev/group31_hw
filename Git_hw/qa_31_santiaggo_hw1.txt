JSON

5. Клонировать репозиторий JSON на локальный компьютер.

	git clone git@github.com:alex-gliantsev/JSON.git

6. Внутри локального JSON создать файл “new.json”.

	touch new.json

7. Добавить файл под гит.

	git add new.json

8. Закоммитить файл.

	git commit -m 'Add new.json'

9. Отправить файл на внешний GitHub репозиторий.

	git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

	cat > new.json
	{
   	"name": "Aleksandr",
   	"age": 35,
   	"pets_number": null,
   	"required_salary": 100000
	}

11. Отправить изменения на внешний репозиторий.

	git add new.json
	git commit -m "Add personal data to new.json"
	git push

12. Создать файл preferences.json
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

cat > preferences.json
{
        "favourites" : {
                "movie" : "Ivan Vasilievich change profession",
                "tv series" : "Friends",
                "food" : "Pelmeni",
                "season" : "Summer",
                "coutry_to_visit" : "Iceland"
                }
}

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON.

	cat > skills.json
	{
   	"course_skills": [
      	"Web Testing",
      	"Mobile Testing",
      	"Functional Testing",
      	"Exploratory Testing",
      	"Regression Testing",
      	"API Testing",
      	"Developer Tools",
      	"SQL",
      	"PostgreSQL",
      	"GIT",
      	"CLI",
      	"Client-Server architecture",
      	"Charles Proxy",
      	"Python"
		]
	}

15. Отправить сразу 2 файла на внешний репозиторий.

	git add .
	git commit -m "Add preferences and skills json files"
	git push

16. На веб интерфейсе создать файл bug_report.json.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	https://github.com/alex-gliantsev/JSON/blob/main/bug_report.json

20. Синхронизировать внешний и локальный репозиторий JSON

	git pull

XML

 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
	
	git clone git@github.com:alex-gliantsev/XML.git

 23. Внутри локального XML создать файл “new.xml”.

	touch new.xml

 24. Добавить файл под гит.

	git add new.xml

 25. Закоммитить файл.

	git commit -m "Create new.xml"

 26. Отправить файл на внешний GitHub репозиторий.

	git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

	cat new.xml
	<person>
        	<name>Aleksandr</name>
        	<age>35</age>
        	<pets>0</pets>
        	<salary>100000</salary>
	</person>

 28. Отправить изменения на внешний репозиторий.

	git add new.xml
	git commit -m "Add data to new.xml"
	git push

 29. Создать файл preferences.xml

	touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

	cat > preferences.xml
	<pref>
   		<movie>Interstellar</movie>
   		<series>Brassic</series>
   		<food>Pizza</food>
   		<season>Summer</season>
   		<coutry>Canada</coutry>
	</pref>
	
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

	cat > skills.xml
	<course>
   		<testing>
      		<s1>Web Testing</s1>
      		<s2>Mobile Testing</s2>
      		<s3>Functional Testing</s3>
      		<s4>Exploratory Testing</s4>
      		<s5>API Testing</s5>
   		</testing>
   		<tools>
      		<t1>Developer Tools</t1>
      		<t2>GIT</t2>
      		<t3>Postman</t3>
     	 		<t4>CLI</t4>
      		<t5>Charles Proxy</t5>
      		<t6>PostgreSQL</t6>
      		<t7>Dbeaver</t7>
	</course>

 32. Сделать коммит в одну строку.

	git add .
	git commit -m "Add preferences and skills xml files"

 33. Отправить сразу 2 файла на внешний репозиторий.

	git push
	
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	https://github.com/alex-gliantsev/XML/blob/main/bug_report.xml

 38. Синхронизировать внешний и локальный репозиторий XML

	git pull
